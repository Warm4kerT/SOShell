Hello - from c:\Users\turtl\.vscode\extensions\jaredly.reason-vscode-1.7.8\bin.native.exe.hot.exe
Previous log location: C:\Users\turtl\AppData\Local\Temp\lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///d%3A/Documents/UBI/Ocaml/projeto1.ml","languageId":"ocaml","version":1,"text":"open String;;\nopen Array;;\nlet linha1=read_line();;\nlet linha2=read_line();;\n\nlet minLev a b c=  if min a b < c then min a b else c;;\n\nlet lev s1 s2= \n  let c = String.length s1 and l = String.length s2 in\n    let matrix = Array.make_matrix (c+1) (l+1) 0 in\n\n  for i=0 to c do\n    matrix.(i).(0) <- i  (*atribuir valores a primeira linha*)\n  done;\n  for j=0 to l do\n    matrix.(0).(j) <- j(*atribuir valores a primeira coluna*)\n  done;\n\n  for j=1 to l do\n    for i=1 to c do\n      if s1.[i-1] = s2.[j-1] then \n        matrix.(i).(j) <- matrix.(i-1).(j-1) \n      else\n        matrix.(i).(j) <- minLev (matrix.(i-1).(j) + 1) (matrix.(i).(j-1) + 1) (matrix.(i-1).(j-1) + 1)\n    done;\n  done;\n  matrix.(c).(l)\n;;\n\nlet()=\n  Printf.printf \"%d\\n\" (lev linha1 linha2)"}}}
